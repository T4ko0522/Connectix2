@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;

    --card: 0 0% 5%;
    --card-foreground: 0 0% 100%;

    --popover: 0 0% 5%;
    --popover-foreground: 0 0% 100%;

    --primary: 45 100% 50%;
    --primary-foreground: 0 0% 0%;

    --secondary: 0 0% 10%;
    --secondary-foreground: 0 0% 100%;

    --muted: 0 0% 15%;
    --muted-foreground: 0 0% 70%;

    --accent: 45 100% 50%;
    --accent-foreground: 0 0% 0%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 100%;

    --border: 0 0% 15%;
    --input: 0 0% 15%;
    --ring: 45 100% 50%;

    --radius: 0.5rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
  }
}

@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
  100% {
    transform: translateY(0px);
  }
}

@keyframes float-delay {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-15px);
  }
  100% {
    transform: translateY(0px);
  }
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-float-delay {
  animation: float-delay 7s ease-in-out infinite;
  animation-delay: 1s;
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes scale {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

@keyframes glow {
  0%,
  100% {
    filter: drop-shadow(0 0 5px rgba(255, 215, 0, 0.3));
  }
  50% {
    filter: drop-shadow(0 0 20px rgba(255, 215, 0, 0.6));
  }
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes blink {
  50% {
    border-color: transparent;
  }
}

.animate-pulse-slow {
  animation: pulse 3s ease-in-out infinite;
}

.animate-spin-slow {
  animation: spin 8s linear infinite;
}

.animate-scale {
  animation: scale 3s ease-in-out infinite;
}

.animate-glow {
  animation: glow 3s ease-in-out infinite;
}

.animate-shimmer {
  background: linear-gradient(90deg, rgba(255, 215, 0, 0) 0%, rgba(255, 215, 0, 0.1) 50%, rgba(255, 215, 0, 0) 100%);
  background-size: 200% 100%;
  animation: shimmer 3s infinite;
}

.animate-typing {
  overflow: hidden;
  white-space: nowrap;
  border-right: 3px solid white;
  animation: typing 3.5s steps(40, end), blink 1s step-end infinite;
}

/* 入力フィールドのカスタムスタイル */
.domain-input {
  @apply flex items-center overflow-hidden rounded-md border border-white/20 bg-black/50;
}

.domain-input span {
  @apply pl-4 pr-0 text-white/70 font-light;
}

.domain-input input {
  @apply flex-1 bg-transparent px-0 py-2.5 text-sm text-white placeholder:text-white/30 focus:outline-none focus:ring-0 border-0;
}

/* モダンなスタイルの追加 */
.modern-container {
  @apply relative z-10 w-full max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8;
}

.modern-title {
  @apply text-3xl sm:text-4xl md:text-5xl font-light tracking-wide leading-tight;
}

.modern-subtitle {
  @apply text-lg sm:text-xl font-light tracking-wide text-white/70;
}

.modern-button {
  @apply px-6 py-2.5 bg-transparent border border-yellow-400/20 hover:border-yellow-400/40 text-white text-sm font-light tracking-wider transition-all duration-300 rounded-full;
}

.modern-button-primary {
  @apply px-6 py-2.5 bg-yellow-400 hover:bg-yellow-500 text-black text-sm font-medium tracking-wider transition-all duration-300 rounded-full border-0;
}

.modern-input {
  @apply bg-black/50 border border-white/20 focus:border-yellow-400/40 text-white placeholder:text-white/30 rounded-none px-4 py-2.5 text-sm font-light tracking-wide focus:ring-0 focus:outline-none;
}

.modern-card {
  @apply bg-black/50 border border-white/10 backdrop-blur-sm;
}

.modern-link {
  @apply text-white/70 hover:text-yellow-400 transition-colors duration-300 font-light tracking-wide;
}

.modern-nav {
  @apply fixed top-0 left-0 right-0 z-50 backdrop-blur-md bg-black/50 border-b border-white/10;
}

.modern-footer {
  @apply border-t border-white/10 py-8 text-white/50 text-sm font-light tracking-wide;
}

/* アイコンスタイル */
.icon-container {
  @apply flex items-center justify-center h-10 w-10 bg-yellow-400 text-black rounded-full;
}

.icon-container-outline {
  @apply flex items-center justify-center h-10 w-10 border border-yellow-400/50 text-yellow-400 rounded-full;
}

/* スクロールバーのカスタマイズ */
::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}

::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.1);
}

::-webkit-scrollbar-thumb {
  background: rgba(255, 215, 0, 0.2);
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(255, 215, 0, 0.3);
}

/* react-toastify カスタムスタイル */
.Toastify__toast {
  background-color: rgba(0, 0, 0, 0.7) !important;
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 215, 0, 0.1);
  border-radius: 0.5rem;
}

.Toastify__toast-body {
  font-family: inherit;
  font-weight: 300;
  letter-spacing: 0.05em;
}

.Toastify__progress-bar {
  background: linear-gradient(to right, rgba(255, 215, 0, 0.5), rgba(255, 215, 0, 0.8)) !important;
}

.Toastify__toast-icon {
  font-size: 1.2rem;
}

.Toastify__close-button {
  color: rgba(255, 255, 255, 0.5) !important;
}

.Toastify__close-button:hover {
  color: rgba(255, 255, 255, 0.8) !important;
}

.Toastify__toast--success {
  border-left: 4px solid rgba(34, 197, 94, 0.7) !important;
}

.Toastify__toast--error {
  border-left: 4px solid rgba(239, 68, 68, 0.7) !important;
}

.Toastify__toast--warning {
  border-left: 4px solid rgba(245, 158, 11, 0.7) !important;
}

.Toastify__toast--info {
  border-left: 4px solid rgba(59, 130, 246, 0.7) !important;
}

/* ドラッグアニメーション用のスタイル */
@keyframes pulse-border {
  0%,
  100% {
    border-color: rgba(234, 179, 8, 0.3);
  }
  50% {
    border-color: rgba(234, 179, 8, 0.6);
  }
}

.animate-pulse-border {
  animation: pulse-border 2s ease-in-out infinite;
}

@keyframes float-drag {
  0%,
  100% {
    transform: translateY(0) rotate(0.5deg);
  }
  50% {
    transform: translateY(-5px) rotate(-0.5deg);
  }
}

.animate-float-drag {
  animation: float-drag 3s ease-in-out infinite;
}

/* ドラッグハンドルのスタイル */
.drag-handle {
  touch-action: none;
  cursor: grab;
}

.drag-handle:active {
  cursor: grabbing;
}

/* ドロップ領域のハイライト */
.drop-highlight {
  position: relative;
  overflow: hidden;
}

.drop-highlight::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, rgba(234, 179, 8, 0.1) 0%, transparent 100%);
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.drop-highlight.active::after {
  opacity: 1;
}

/* react-beautiful-dnd (hello-pangea/dnd) のスタイル調整 */
/* ドラッグ中の要素のスタイル */
[data-rbd-draggable-id] {
  user-select: none;
}

/* ドラッグハンドルのスタイル */
[data-rbd-drag-handle-draggable-id] {
  cursor: grab;
  touch-action: none;
}

[data-rbd-drag-handle-draggable-id]:active {
  cursor: grabbing;
}

/* ドラッグ中のプレースホルダーのスタイル */
[data-rbd-placeholder-context-id] {
  opacity: 0.2;
  transition: opacity 0.2s ease;
}

/* ドロップ可能な領域のスタイル */
[data-rbd-droppable-id] {
  min-height: 10px;
}

/* ドラッグ中のスタイル */
.link-item-dragging {
  will-change: transform;
  transform-origin: center;
  transition: transform 0.1s ease-out;
  /* カーソル位置との同期のためのスタイル */
  pointer-events: none !important;
  cursor: grabbing !important;
  /* ドラッグ中の要素の位置をカーソルと同期させるための調整 */
  margin-top: 0 !important;
  margin-left: 0 !important;
}

/* ドラッグ中のボディスタイル */
.dragging-active {
  user-select: none;
  cursor: grabbing !important;
}

/* ドラッグ中のアニメーション */
@keyframes drag-glow {
  0%,
  100% {
    box-shadow: 0 0 5px 0 rgba(234, 179, 8, 0.3);
  }
  50% {
    box-shadow: 0 0 15px 0 rgba(234, 179, 8, 0.5);
  }
}

.drag-glow {
  animation: drag-glow 2s ease-in-out infinite;
}

/* ドロップ時のアニメーション */
@keyframes drop-success {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.03);
  }
  100% {
    transform: scale(1);
  }
}

.drop-success {
  animation: drop-success 0.5s ease-out;
}

/* ドラッグ中のカーソルスタイル */
html.dragging-cursor,
html.dragging-cursor * {
  cursor: grabbing !important;
}

/* react-beautiful-dnd のドラッグ位置調整 */
[data-rbd-draggable-context-id] {
  transform-origin: 50% 50% !important;
}

/* 下から上に出てくるアニメーション */
@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-slide-up {
  animation: slideUp 0.6s ease-out forwards;
  opacity: 0;
}

/* 遅延クラス */
.delay-100 {
  animation-delay: 0.1s;
}
.delay-200 {
  animation-delay: 0.2s;
}
.delay-300 {
  animation-delay: 0.3s;
}
.delay-400 {
  animation-delay: 0.4s;
}
.delay-500 {
  animation-delay: 0.5s;
}

/* リンクアイテムのアニメーション */
.link-item-appear {
  animation: slideUp 0.5s ease-out forwards;
  opacity: 0;
}

/* リンクカードのホバーエフェクト用アニメーション */
@keyframes pulse-subtle {
  0%,
  100% {
    opacity: 0.7;
  }
  50% {
    opacity: 1;
  }
}

@keyframes shine {
  0% {
    background-position: -100% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

.link-card-shine {
  position: relative;
  overflow: hidden;
}

.link-card-shine::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 200%;
  height: 100%;
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.05) 25%,
    rgba(255, 255, 255, 0.1) 50%,
    rgba(255, 255, 255, 0.05) 75%,
    rgba(255, 255, 255, 0) 100%
  );
  transform: translateX(-100%);
  transition: transform 0.6s ease;
}

.link-card-shine:hover::after {
  transform: translateX(100%);
}

/* リンクカードのアイコン脈動アニメーション */
.link-icon-pulse {
  animation: pulse-subtle 2s ease-in-out infinite;
}
